[PHP]

;;;;;;;;;;;;;;;;;;;;;
; About php.ini     ;
;;;;;;;;;;;;;;;;;;;;;

; PHP's initialization file, generally called php.ini, is responsible for
; configuring many of the aspects of PHP's behavior.

; PHP attempts to find and load this configuration from a number of locations.
; The following is a summary of its search order:
; 1. SAPI module specific location.
; 2. The PHPRC environment variable.
; 3. A number of predefined registry keys on Windows
; 4. Current working directory (except CLI)
; 5. The web server's directory (for SAPI modules), or directory of PHP
; (otherwise in Windows)
; 6. The directory from the --with-config-file-path compile time option, or the
; Windows directory (usually C:\windows)
; See the PHP docs for more specific information.
; https://php.net/configuration.file

; The syntax of the file is extremely simple. Whitespace and lines
; beginning with a semicolon are silently ignored (as you probably guessed).
; Section headers (e.g. [Foo]) are also silently ignored, even though
; they might mean something in the future.

; Directives following the section heading [PATH=/www/mysite] only
; apply to PHP files in the /www/mysite directory. Directives
; following the section heading [HOST=www.example.com] only apply to
; PHP files served from www.example.com. Directives set in these
; special sections cannot be overridden by user-defined INI files or
; at runtime. Currently, [PATH=] and [HOST=] sections only work under
; CGI/FastCGI.
; https://php.net/ini.sections

; Directives are specified using the following syntax:
; directive = value
; Directive names are case sensitive - foo=bar is different from FOO=bar.
; Directives are variables used to configure PHP or PHP extensions.
; There is no name validation. If PHP can't find an expected
; directive because it is not set or is mistyped, a default value will be used.

; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one
; of the INI constants (On, Off, True, False, Yes, No and None) or an expression
; (e.g. E_ALL & ~E_NOTICE), a quoted string ("bar"), or a reference to a
; previously set variable or directive (e.g. ${foo})

; Expressions in the INI file are limited to bitwise operators and parentheses:
; | bitwise OR
; ^ bitwise XOR
; & bitwise AND
; ~ bitwise NOT
; ! boolean NOT

; Boolean flags can be turned on using the values 1, On, True or Yes.
; They can be turned off using the values 0, Off, False or No.

; An empty string can be denoted by simply not writing anything after the equal
; sign, or by using the None keyword:
; foo = ; sets foo to an empty string
; foo = None ; sets foo to an empty string
; foo = "None" ; sets foo to the string 'None'

; If you use constants in your value, and these constants belong to a
; dynamically loaded extension (either a PHP extension or a Zend extension),
; you may only use these constants after the line that loads the extension.

;;;;;;;;;;;;;;;;;;;
; About this file ;
;;;;;;;;;;;;;;;;;;;
; PHP comes packaged with two INI files. One that is recommended to be used
; in production environments and one that is recommended to be used in
; development environments.

; php.ini-production contains settings which hold security, performance and
; best practices at its core. But please be aware, these settings may break
; compatibility with older or less security conscience applications. We
; recommending using the production ini in production and testing environments.

; php.ini-development is very similar to its production variant, except it is
; much more verbose when it comes to errors. We recommend using the
; development version only in development environments, as errors shown to
; application users can inadvertently leak otherwise secure information.

; This is the php.ini-development INI file.

;;;;;;;;;;;;;;;;;;;
; Quick Reference ;
;;;;;;;;;;;;;;;;;;;

; The following are all the settings which are different in either the production
; or development versions of the INIs with respect to PHP's default behavior.
; Please see the actual settings later in the document for more details as to why
; we recommend these changes in PHP's behavior.

; display_errors
; Default Value: On
; Development Value: On
; Production Value: Off

; display_startup_errors
; Default Value: On
; Development Value: On
; Production Value: Off

; error_reporting
; Default Value: E_ALL
; Development Value: E_ALL
; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT

; log_errors
; Default Value: Off
; Development Value: On
; Production Value: On

; max_input_time
; Default Value: -1 (Unlimited)
; Development Value: 60 (60 seconds)
; Production Value: 60 (60 seconds)

; output_buffering
; Default Value: Off
; Development Value: 4096
; Production Value: 4096

; register_argc_argv
; Default Value: On
; Development Value: Off
; Production Value: Off

; request_order
; Default Value: None
; Development Value: "GP"
; Production Value: "GP"

; session.gc_divisor
; Default Value: 100
; Development Value: 1000
; Production Value: 1000

; session.sid_bits_per_character
; Default Value: 4
; Development Value: 5
; Production Value: 5

; short_open_tag
; Default Value: On
; Development Value: Off
; Production Value: Off

; variables_order
; Default Value: "EGPCS"
; Development Value: "GPCS"
; Production Value: "GPCS"

; zend.exception_ignore_args
; Default Value: Off
; Development Value: Off
; Production Value: On

; zend.exception_string_param_max_len
; Default Value: 15
; Development Value: 15
; Production Value: 0

;;;;;;;;;;;;;;;;;;;;;
; php.ini Options   ;
;;;;;;;;;;;;;;;;;;;;;
; Name for user-defined php.ini (.htaccess) files. Default is ".user.ini"
;user_ini.filename = ".user.ini"

; To disable this feature set this option to an empty value
;user_ini.filename =

; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes)
;user_ini.cache_ttl = 300

;;;;;;;;;;;;;;;;;;;;;
; Language Options  ;
;;;;;;;;;;;;;;;;;;;;;

engine=On
short_open_tag=Off
precision=14
output_buffering=4096

; Enable zlib.output_compression (On by default)
zlib.output_compression=Off
implicit_flush=Off
unserialize_callback_func=
serialize_precision=-1

;open_basedir =

; This directive allows you to disable certain functions for security reasons.
disable_functions=

; This directive allows you to disable certain classes for security reasons.
disable_classes=

; Decides whether PHP may expose the fact that it is installed on the server (e.g., by adding its signature to the web server header). It is no security threat in any way, but it makes it possible to determine whether you use PHP on your server or not.
expose_php=On

;;;;;;;;;;;;;;;;;;;;
; Resource Limits  ;
;;;;;;;;;;;;;;;;;;;;

; Maximum execution time of each script, in seconds
max_execution_time=120

; Maximum amount of time each script may spend parsing request data.
max_input_time=60

; Maximum amount of memory a script may consume
memory_limit=512M

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Error handling and logging ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Error reporting level
error_reporting=E_ALL & ~E_DEPRECATED & ~E_STRICT

; Display errors (default: On)
display_errors=On

; Display startup errors (default: On)
display_startup_errors=On

; Log errors (default: Off)
log_errors=On

; Do not log repeated messages. Repeated errors must occur in same file on same line unless ignore_repeated_source is true.
ignore_repeated_errors=Off

; Ignore source of message when ignoring repeated messages.
ignore_repeated_source=Off

; Report memory leaks
report_memleaks=On

; Log errors to specified file
error_log="C:\xampp\php\logs\php_error_log"

;;;;;;;;;;;;;;;;;
; Data Handling ;
;;;;;;;;;;;;;;;;;

; Order of variables parsing
variables_order="GPCS"

; Request order
request_order="GP"

; Disable $argv and $argc for performance reasons
register_argc_argv=Off

; Enables JIT compilation of scripts for performance reasons
auto_globals_jit=On

; Maximum size of POST data that PHP will accept.
post_max_size=40M

; Automatically add files before PHP document.
auto_prepend_file=

; Automatically add files after PHP document.
auto_append_file=

; Default MIME type
default_mimetype="text/html"

; Default character set
default_charset="UTF-8"

;;;;;;;;;;;;;;;;;;;;;;;;;
; Paths and Directories ;
;;;;;;;;;;;;;;;;;;;;;;;;;

; UNIX: "/path1:/path2"
include_path="C:\xampp\php\PEAR"

; Windows: "\path1;\path2"
;include_path = ".;c:\php\includes"

; PHP's default setting for include_path is ".;/path/to/php/pear"
; https://php.net/include-path

; The root of the PHP pages, used only if nonempty.
doc_root=

; The directory under which PHP opens the script using /~username used only if nonempty.
user_dir=

; Directory in which the loadable extensions (modules) reside.
extension_dir="C:\xampp\php\ext"

; Directory where the temporary files should be placed.
sys_temp_dir="C:\xampp\tmp"

; Whether or not to enable the dl() function. The dl() function does NOT work properly in multithreaded servers, such as IIS or Zeus, and is automatically disabled on them.
enable_dl=Off

;;;;;;;;;;;;;;;;;;;;;
; File Uploads      ;
;;;;;;;;;;;;;;;;;;;;;

; Whether to allow HTTP file uploads.
file_uploads=On

; Temporary directory for HTTP uploaded files (will use system default if not specified).
upload_tmp_dir="C:\xampp\tmp"

; Maximum allowed size for uploaded files.
upload_max_filesize=40M

; Maximum number of files that can be uploaded via a single request
max_file_uploads=20

;;;;;;;;;;;;;;;;;;
; Fopen wrappers ;
;;;;;;;;;;;;;;;;;;

; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
allow_url_fopen=On

; Whether to allow include/require to open URLs (like https:// or ftp://) as files.
allow_url_include=Off

; Default timeout for socket based streams (seconds)
default_socket_timeout=60

;;;;;;;;;;;;;;;;;;;;;;;;
; Dynamic Extensions   ;
;;;;;;;;;;;;;;;;;;;;;;;;

; If you wish to have an extension loaded automatically, use the following
; syntax:
;
; extension=modulename
;
; For example:
;
; extension=mysqli
;
; When the extension library to load is not located in the default extension
; directory, You may specify an absolute path to the library file:
;
; extension=/path/to/extension/mysqli.so
;
; Notes for Windows environments:
;
; - Many DLL files are located in the ext/ extension folders as well as the separate PECL DLL download.
; Be sure to appropriately set the extension_dir directive.
extension=curl
extension=fileinfo
extension=gd
extension=gettext
extension=mbstring
extension=mysqli
extension=pdo_mysql
extension=pdo_sqlite
extension=zip

;;;;;;;;;;;;;;;;;;;;
; Module Settings  ;
;;;;;;;;;;;;;;;;;;;;

asp_tags=Off
display_startup_errors=On
track_errors=Off
y2k_compliance=On
allow_call_time_pass_reference=Off
safe_mode=Off
safe_mode_gid=Off
safe_mode_allowed_env_vars=PHP_
safe_mode_protected_env_vars=LD_LIBRARY_PATH

[CLI Server]
cli_server.color=On

[Date]
date.timezone="Europe/Berlin"

[filter]
filter.default=unsafe_raw

[iconv]

[imap]

[intl]

[sqlite3]

[Pcre]

[Pdo]
pdo_mysql.default_socket="MySQL"

[Pdo_mysql]
pdo_mysql.default_socket=

[Phar]
phar.readonly=On
phar.require_hash=On

[mail function]
; Use SMTP for sending email
SMTP = smtp.gmail.com
smtp_port = 587
; Enable SMTP authentication
auth_username = miguelangelbeltranrache11@gmail.com
auth_password = Zombie.com1924
; Specify the sender's email address
sendmail_from = miguelangelbeltranrache11@gmail.com
; Use TLS for secure connection
sendmail_path = "\"C:\Program Files (x86)\sendmail\sendmail.exe\" -t -i"

extension=openssl